@using BlazorFullStackCrud.Shared.DTO

@if (IsLoadingSub)
{
    <div class="spinner"></div>
}
else
{
<div class="border rounded my-3">
    @if (ShowConfirmationSub)
    {
        <div class="modal" tabindex="-1" role="dialog" style="display: block; background-color: rgba(0, 0, 0, 0.5)">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirmation</h5>
                        <button type="button" class="close" @onclick="HideConfirmationDialog">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this sub-element?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="HideConfirmationDialog">Cancel</button>
                        <button type="button" class="btn btn-danger" @onclick="RemoveSubElement">Delete</button>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center text-primary px-3 py-2">
        <h5 class="mb-0">Sub-element</h5>
        <div>
            <button type="button" @onclick="ShowConfirmationDialog" class="btn btn-sm btn-danger">Remove</button>
        </div>
    </div>

    <div class="container row my-3">
        <div class="col-md-3">
            <label for="input1" class="form-label">Element:</label>
        </div>
        <div class="col-md-3">
            <input type="text" class="form-control" @bind-value="@SubElement.Element" />
        </div>

        <div class="col-md-3">
            <label for="input1" class="form-label">Type:</label>
        </div>
        <div class="col-md-3">
            <input type="text" class="form-control" @bind-value="@SubElement.Type" />
        </div>
    </div>
    <div class="container row my-3">
        <div class="col-md-3">
            <label for="input1" class="form-label">Width:</label>
        </div>
        <div class="col-md-3">
            <input type="number" class="form-control" @bind-value="@SubElement.Width" />
        </div>

        <div class="col-md-3">
            <label for="input1" class="form-label">Height:</label>
        </div>
        <div class="col-md-3">
            <input type="number" class="form-control" @bind-value="@SubElement.Height" />
        </div>

    </div>

</div>
}

@code {
    [Parameter]
    public SubElementDTO SubElement { get; set; }

    [Parameter]
    public EventCallback<SubElementDTO> OnRemoveSubElement { get; set; }
    private bool ShowConfirmationSub { get; set; } = false;
    bool IsLoadingSub = false;

    private void RemoveSubElement()
    {
        //IsLoadingSub = true;
        ShowConfirmationSub = false;
        OnRemoveSubElement.InvokeAsync(SubElement);
        //IsLoadingSub = false;
    }

    private void ShowConfirmationDialog()
    {
        ShowConfirmationSub = true;
    }

    private void HideConfirmationDialog()
    {
        ShowConfirmationSub = false;
    }
}
